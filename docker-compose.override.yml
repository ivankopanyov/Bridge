services:
  bridge.fias:
    container_name: bridge_fias
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - RABBIT_MQ_HOST=${RABBIT_MQ_HOST}
      - RABBIT_MQ_PORT=${RABBIT_MQ_PORT}
      - TZ=${TZ}
    networks:
      - network
    depends_on:
      - rabbitmq
    restart: always

  bridge.opera:
    container_name: bridge_opera
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - RABBIT_MQ_HOST=${RABBIT_MQ_HOST}
      - RABBIT_MQ_PORT=${RABBIT_MQ_PORT}
      - TZ=${TZ}
    networks:
      - network
    depends_on:
      - rabbitmq
    restart: always

  bridge.sanatorium:
    container_name: bridge_sanatorium
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - RABBIT_MQ_HOST=${RABBIT_MQ_HOST}
      - RABBIT_MQ_PORT=${RABBIT_MQ_PORT}
      - TZ=${TZ}
    networks:
      - network
    depends_on:
      - rabbitmq
    restart: always

  bridge.fiscal:
    container_name: bridge_fiscal
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - RABBIT_MQ_HOST=${RABBIT_MQ_HOST}
      - RABBIT_MQ_PORT=${RABBIT_MQ_PORT}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - TZ=${TZ}
    networks:
      - network
    depends_on:
      - rabbitmq
      - redis
    restart: always

  bridge.telegrambot:
    container_name: bridge_telegrambot
    environment:
      - DOTNET_ENVIRONMENT=Development
      - RABBIT_MQ_HOST=${RABBIT_MQ_HOST}
      - RABBIT_MQ_PORT=${RABBIT_MQ_PORT}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - TZ=${TZ}
    networks:
      - network
    depends_on:
      - rabbitmq
      - redis
    restart: always

  bridge.hostapi:
    container_name: bridge_hostapi
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=80
      - RABBIT_MQ_HOST=${RABBIT_MQ_HOST}
      - RABBIT_MQ_PORT=${RABBIT_MQ_PORT}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - TZ=${TZ}
    ports:
      - 8080:80
    networks:
      - network
    depends_on:
      - rabbitmq
      - redis
      - elasticsearch
    restart: always
  
  bridge.spa:
    container_name: bridge_spa
    environment:
      - TZ=${TZ}
      - SERVER_HOST=http://localhost:8080
    ports:
      - 80:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    restart: always
  
  elasticsearch:
    container_name: elasticsearch
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data:Z
    networks:
      - network
    restart: always

  rabbitmq:
    container_name: rabbitmq
    ports:
      - 15672:15672
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    networks:
      - network
    restart: always
  
  redis:
    container_name: redis
    volumes: 
      - redis:/data
    networks:
      - network
    restart: always

networks:
  network:
    driver: bridge

volumes:
  elasticsearch:
  redis:
  rabbitmq:

